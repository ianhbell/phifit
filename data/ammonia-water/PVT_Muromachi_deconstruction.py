import numpy as np, six, matplotlib.pyplot as plt
data = {
  450:{
  'p (MPa)': [200.000, 180.000, 160.000, 140.000, 120.000, 100.000, 90.000, 80.000, 70.000, 60.000, 50.000, 40.000, 30.000, 20.000, 10.000],
  'data': {  # x_NH3 (molar), rho (kg/m3) (aligned with pressure)
    0.1048: [934.3, 927.0, 919.5, 911.3, 902.7, 893.9, 889.2, 884.2, 879.1, 873.9, 868.5, 862.7, 856.6, 850.4, 843.9],
    0.2046: [892.2, 885.1, 877.1, 868.9, 860.3, 850.6, 845.9, 840.9, 835.4, 829.6, 823.8, 817.8, 811.0, 804.3, 796.9],
    0.3807: [825.3, 817.2, 807.9, 798.6, 788.1, 777.1, 771.1, 765.1, 758.3, 751.5, 744.9, 736.8, 728.1, 718.8, 708.1],
    0.5565: [755.2, 746.2, 736.6, 726.2, 714.8, 702.2, 695.3, 687.8, 680.1, 671.3, 662.2, 651.6, 639.8, 625.9, 608.5],
    0.7008: [699.3, 689.4, 678.7, 666.9, 654.0, 639.2, 631.2, 622.2, 612.5, 601.8, 589.4, 575.2, 557.7, 534.7, np.nan],
    0.8010: [660.9, 650.1, 638.7, 625.9, 611.5, 595.2, 586.2, 576.0, 564.9, 552.2, 537.4, 519.2, 495.6, 458.5, np.nan],
    0.9102: [618.7, 607.8, 595.6, 582.2, 566.9, 549.2, 539.1, 527.7, 514.8, 499.7, 481.3, 457.5, 422.0, np.nan, np.nan],
    1.0000: [588.2, 576.3, 563.1, 548.2, 531.4, 511.7, 500.2, 487.4, 472.6, 455.2, 433.4, 403.7, 355.3, np.nan, np.nan]
  }
  },
  500:{
  'p (MPa)': [200.000, 180.000, 160.000, 140.000, 120.000, 100.000, 90.000, 80.000, 70.000, 60.000, 50.000, 40.000, 30.000, 20.000, 10.000],
  'data': {  # x_NH3 (molar), rho (kg/m3) (aligned with pressure)
    0.1048: [897.9, 889.4, 880.6, 870.8, 860.7, 849.7, 843.7, 837.7, 831.3, 824.3, 817.3, 809.6, 801.3, 792.5, 782.5],
    0.2046: [855.4, 846.7, 837.4, 827.5, 816.7, 805.0, 798.6, 792.1, 785.1, 777.5, 769.5, 760.6, 751.1, 740.4, 728.2],
    0.3807: [789.2, 779.3, 768.3, 756.6, 743.7, 729.7, 721.8, 713.9, 704.8, 695.3, 684.3, 672.4, 658.5, 641.7, np.nan],
    0.5565: [715.0, 704.5, 692.9, 679.9, 665.7, 649.4, 640.2, 630.1, 619.0, 606.4, 591.7, 574.0, 551.1, 517.0, np.nan],
    0.7008: [662.1, 650.4, 637.4, 623.1, 606.7, 587.6, 576.7, 564.5, 550.6, 534.1, 514.1, 487.8, 447.5, np.nan, np.nan],
    0.8010: [621.2, 608.9, 595.3, 580.1, 562.5, 541.6, 529.6, 515.8, 499.8, 480.7, 456.2, 422.0, np.nan, np.nan, np.nan],
    0.9102: [581.9, 569.2, 555.0, 538.9, 520.1, 497.6, 484.1, 468.5, 450.0, 426.9, 350.9, np.nan, np.nan, np.nan, np.nan],
    1.0000: [551.9, 538.3, 523.1, 505.9, 485.8, 461.5, 446.9, 430.2, 410.1, 384.9, np.nan, np.nan, np.nan, np.nan, np.nan]
  }
  }
}

mm_NH3 = 0.01703026 # [kg/mol]
mm_H2O = 0.018015268 # [kg/mol]
    
pts = []
for T_K, group in six.iteritems(data):
    for xNH3, RHO in six.iteritems(group['data']):
        molemass_kgmol = mm_NH3*xNH3 + mm_H2O*(1-xNH3)
        for rho_kgm3, p_MPa in zip(RHO, group['p (MPa)']):
            if np.isnan(rho_kgm3): 
                continue # skip nans

            pt = {'p (Pa)': float(p_MPa*1e6),
              'rho (mol/m3)': rho_kgm3/molemass_kgmol,
              'T (K)': float(T_K),
              'z (molar)': [xNH3, 1-xNH3],
              'type': "PRhoT",
              'BibTeX': "Muromachi-JCT-2008-1594"
            }
            pts.append(pt)
        plt.plot(1/np.array(RHO), group['p (MPa)'], label=str(T_K) +  ' - ' + str(xNH3))
plt.legend()
plt.xlabel(r'$v$ (kg/dm$^3$)')
plt.ylabel('$p$ (MPa)')
plt.show()

import json
with open('PVT-Muromachi.json','w') as fp:
    JSON_data = {'about': {'names': ['Ammonia','Water']},
                'data': pts
                }
    fp.write(json.dumps(JSON_data,indent=2))